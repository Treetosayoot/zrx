# Copyright (c) Zensical LLC <https://zensical.org>

# SPDX-License-Identifier: MIT
# Third-party contributions licensed under CLA

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

[git]
conventional_commits = true
filter_unconventional = true
commit_preprocessors = [
  # Transform our own commit message format into conventional commits format,
  # so we can parse it with git-cliff. Our format is optimized for readability
  # in git logs, and better caters to monorepos, since the package name is at
  # the start of the commit message.
  { pattern = '^([^:]+):([^\\s]+) - (.+)$', replace = "${2}(${1}): ${3}" },
]
commit_parsers = [
  { message = "\\(workspace\\)", skip = true },
  { message = "^feature", group = "<!-- 0 -->Features" },
  { message = "^fix", group = "<!-- 1 -->Bug Fixes" },
  { message = "^refactor", group = "<!-- 2 -->Refactoring" },
  { message = "^docs", group = "<!-- 3 -->Documentation" },
  { message = "^perf", group = "<!-- 4 -->Performance Improvements" },
  { message = "^test", group = "<!-- 5 -->Testing" },
  { message = "^build", group = "Build System", skip = true },
  { message = "^style", group = "Styling", skip = true },
  { message = "^chore", group = "Chores", skip = true },
  { message = "^release", group = "Release", skip = true },
]

[changelog]
trim = true
render_always = true
body = """
{% if version %}\
  ## [{{ version | trim_start_matches(pat="v") }}] - \
  {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
  ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
  ### {{ group | striptags | trim }}
  {% for commit in commits %}
    - \
    {{ commit.id | truncate(length=8, end="") }}\
    {% if commit.scope %} **{{ commit.scope }}**{% endif %}\
    {% if commit.breaking %} [**breaking**]{% endif %} \
    - {{ commit.message }}\
  {% endfor %}
{% endfor %}
"""
